version: '3.2'
services:
    algorithm-sim:
        image: $ALGORITHM_IMAGE
        shm_size: '2gb'
        pid: "host"
        environment:
         - SCONE_MODE=sim
#         - SCONE_VERSION=1
         - SCONE_HEAP=4G
         - SCONE_SYSLIBS=1
         - SCONE_LOG=0
         - SCONE_FORK=1
         - SCONE_ALLOW_DLOPEN=2
         - SCONE_CONFIG_ID=${POLICY_NAMESPACE}-algorithm_policy/algorithm
         - "SENSLAS_PORT=${SENSLAS_PORT}"
         - "CAS_MRENCLAVE=${CAS_MRENCLAVE}"
         - "SCONE_CAS_ADDR=${CAS_IP_ADDR}"
         - SCONE_FORK_OS=1
         - SCONE_IGNORE_SIGHUP=1           
        volumes:
         - ./volumes/algorithm-input:/algorithm-input
         - ./volumes/algorithm-output/:/algorithm-output
         - ./volumes/test:/test
         - ./images/NferenceAlgorithm/libsensattest.so:/opt/scone/lib/libattestation.so
        command: /root/miniconda/bin/python3 /app/$ALGORITHM_ENTRYPOINT --output /algorithm-output
        networks:
          sensnet:
    algorithm-hw:
        image: $ALGORITHM_IMAGE
        shm_size: '2gb'
        pid: "host"
        environment:
         - SCONE_MODE=hw
#         - SCONE_VERSION=1
         - SCONE_HEAP=4G
         - SCONE_SYSLIBS=1
         - SCONE_LOG=0
         - SCONE_FORK=1
         - SCONE_ALLOW_DLOPEN=2
         - SCONE_CONFIG_ID=${POLICY_NAMESPACE}-algorithm_policy/algorithm
#         - "SENSLAS_PORT=${SENSLAS_PORT}"
         - "CAS_MRENCLAVE=${CAS_MRENCLAVE}"
         - "SCONE_CAS_ADDR=${CAS_IP_ADDR}"
         - SCONE_FORK_OS=1
         - SCONE_IGNORE_SIGHUP=1
        volumes:
         - ./volumes/algorithm-input:/algorithm-input
         - ./volumes/algorithm-output/:/algorithm-output
         - ./volumes/test:/test
#         - ./images/NferenceAlgorithm/libsensattest.so:/opt/scone/lib/libattestation.so
        command: /root/miniconda/bin/python3 /app/$ALGORITHM_ENTRYPOINT --output /algorithm-output
        devices:
         - "/dev/isgx"
         - "/dev/gsgx"
        networks:
          sensnet:
    algorithm-gpu:
        image: $ALGORITHM_IMAGE
        shm_size: '2gb'
        pid: "host"
        runtime: nvidia
        environment:
         - NVIDIA_VISIBLE_DEVICES=all
         - SCONE_MODE=sim
         - SCONE_VERSION=1
         - SCONE_HEAP=4G
         - SCONE_SYSLIBS=1
         - SCONE_LOG=0
         - SCONE_FORK=1
         - SCONE_ALLOW_DLOPEN=2
         - SCONE_CONFIG_ID=${POLICY_NAMESPACE}-algorithm_policy/algorithm
           #- SCONE_CONFIG_ID=gpu-algorithm_policy/algorithm
         - "SENSLAS_PORT=${SENSLAS_PORT}"
         - "CAS_MRENCLAVE=${CAS_MRENCLAVE}"
         - "SCONE_CAS_ADDR=${CAS_IP_ADDR}"
         - SCONE_FORK_OS=1
         - SCONE_IGNORE_SIGHUP=1
        volumes:
         - ./volumes/algorithm-input:/algorithm-input
         - ./volumes/algorithm-output/:/algorithm-output
         - ./volumes/test:/test
         - ./images/NferenceAlgorithm/libsensattest.so:/opt/scone/lib/libattestation.so
        command: /root/miniconda/bin/python3 /app/$ALGORITHM_ENTRYPOINT --output /algorithm-output
        devices:
         - "/dev/nvidia-uvm"
         - "/dev/nvidia-uvm-tools"
         - "/dev/nvidia0"
         - "/dev/nvidiactl"
         - "/dev/nvidia-modeset"
        networks:
          sensnet:                  
    SensGcsPush:
        image: $SENSGCSPUSH_IMAGENAME:$SENSGCSPUSH_TAG
        environment:
            - GCS_BUCKET_NAME
            - GCS_INPUT_PATH
            - GCS_OBJECT_PREFIX
            - GOBIN
            - GOOGLE_APPLICATION_CREDENTIALS=${GCS_PUSH_CREDENTIALS}
            - MODE
        command: bash -c "/opt/sensoriant/gcs/push/start.sh"
        volumes:
            - ../operator/credentials:/opt/sensoriant/gcs/push/credentials
            - ./datasets:/opt/sensoriant/gcs/push/datasets
        networks:
          sensnet:
    SensGcsPull:
        image: $SENSGCSPULL_IMAGENAME:$SENSGCSPULL_TAG
        environment:
            - GCS_BUCKET_NAME
            - GCS_OUTPUT_PATH
            - GCS_OBJECT_PREFIX
            - GOBIN
            - GOOGLE_APPLICATION_CREDENTIALS=${GCS_PULL_CREDENTIALS}
            - MODE
        command: bash -c "/opt/sensoriant/gcs/pull/start.sh"
        volumes:
            - ../operator/credentials:/opt/sensoriant/gcs/pull/credentials
            - ./datasets:/opt/sensoriant/gcs/pull/datasets
        networks:
          sensnet:
networks:
  sensnet:
    external: true

